version: 2

models:
# ------------------------------------------------
# Orders table
# ------------------------------------------------
  - name: raw_order
    columns:
      # OrderID - Unique, Not Null
      - name: OrderID
        tests:
          - unique
          - not_null
      # CustomerID - Not Null, Valid foreign key ref
      - name: CustomerID
        tests:
          - not_null
          - relationships:
              to: ref('raw_customer')
              field: CustomerID
      # EmployeeID - Not Null, Valid foreign key ref
      - name: EmployeeID
        tests:  
          - not_null
          - relationships:
              to: ref('raw_employee')
              field: EmployeeID
      # orderDate - Not Null
      - name: orderDate
        tests:  
          - not_null
      # requiredDate - Not Null
      - name: requiredDate
        tests:  
          - not_null
      # shipVia - Not Null, Valid foreign key ref
      - name: shipVia
        tests:  
          - relationships:
              to: ref('raw_shipper')
              field: ShipperID
      # freight - check singular test "test_raw_order_freight_is_positive.sql"
      # shipName - Not Null, Does not contain "NULL" string
      - name: shipName
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # shipAddress - Not Null, Does not contain "NULL" string
      - name: shipAddress
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # shipCity - Not Null, Does not contain "NULL" string
      - name: shipCity
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # shipRegion - Not Null, Does not contain "NULL" string
      - name: shipRegion
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # shipPostalCode - Not Null, Does not contain "NULL" string
      - name: shipPostalCode
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # shipPostalCode - Not Null, Does not contain "NULL" string
      - name: shipCountry
        tests:  
          - dbt_utils.not_accepted_values:
              values: ['NULL']
        
# ------------------------------------------------
# OrderDetail table
# ------------------------------------------------
  - name: raw_orderdetail
    columns:
      # OrderID, ProductID - Unique, Not Null
      - name: surrogate_key
        tests:
          - unique
          - not_null
      # OrderID - Not Null, References raw_order
      - name: OrderID
        tests:
          - not_null
          - relationships:
                  to: ref('raw_order')
                  field: OrderID
      # ProductID - Not Null, References raw_product
      - name: ProductID
        tests:
          - not_null
          - relationships:
                  to: ref('raw_product')
                  field: ProductID
      # unitprice, quantity, discount check test_raw_orderdetail_unitprice_quantity_discount_is_positive

# ------------------------------------------------
# Shipper table
# ------------------------------------------------
  - name: raw_shipper
    columns:
      # ShipperID - Unique, Not Null
      - name: ShipperID
        tests:
          - unique
          - not_null
      # companyName - Not Null
      - name: companyName
        tests:
          - not_null

# ------------------------------------------------
# Employee table
# ------------------------------------------------
  - name: raw_employee
    columns:
      # EmployeeID - unique, not null 
      - name: EmployeeID
        tests: 
          - unique
          - not_null
      # LastName - Not Null
      - name: LastName 
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # FirstName - Not Null
      - name: FirstName 
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Title - Not Null, accepted values
      - name: Title 
        tests: 
          - not_null
      # TitleOfCourtesy - can be null, accepted values
      - name: TitleOfCourtesy 
        tests: 
          - not_null
          - accepted_values:
              values: ['Mr.', 'Mrs.', 'Ms.', 'Dr.']
      # BirthDate - Not Null
      - name: BirthDate
        tests: 
          - not_null
      # HireDate - Not Null
      - name: HireDate
        tests: 
          - not_null
      # Address - Not Null
      - name: Address
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # City - can be null, but checking for null
      - name: City
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Region - can be null, but checking for null
      - name: Region
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # PostalCode - can be null, but checking for null
      - name: PostalCode
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Country - can be null, but checking for null
      - name: Country
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # HomePhone - can be null, but checking for null
      - name: HomePhone
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Extension - can be null, but checking for null
      - name: Extension
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Photo - can be null, but checking for null
      - name: Photo 
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
      # Notes - can be null
      # ReportsTo - can be null

      # PhotoPath - can be null, but checking for null
      - name: PhotoPath
        tests: 
          - not_null
          - dbt_utils.not_accepted_values:
              values: ['NULL']
              
# ------------------------------------------------
# EmployeeTerritory table
# ------------------------------------------------
  - name: raw_employeeterritory
    columns:
      # EmployeeID, TerritoryID - Unique, Not Null
      - name: surrogate_key
        tests:
          - unique
          - not_null
      # EmployeeID - Not Null, references raw_employee
      - name: EmployeeID
        tests:
          - not_null
          - relationships:
                  to: ref('raw_employee')
                  field: EmployeeID
      # TerritoryID - not_null, references raw_territory
      - name: TerritoryID
        tests:
          - not_null
          - relationships:
                  to: ref('raw_territory')
                  field: TerritoryID

# ------------------------------------------------
# Territory table
# ------------------------------------------------
  - name: raw_territory
    columns:
      # TerritoryID - unique, not null
      - name: TerritoryID
        tests: 
          - unique
          - not_null 
      # territoryDescription - not null
      - name: territoryDescription
        tests: 
          - not_null 
      # RegionID - not null, references raw_region
      - name: RegionID 
        tests:
        - not_null
        - relationships: 
                  to: ref('raw_region')
                  field: RegionID

# ------------------------------------------------
# Region table
# ------------------------------------------------
  - name: raw_region
    columns:
      # RegionID - Not Null, Unique
      - name: RegionID
        tests:
          - unique
          - not_null
      # regionDescription - Not Null
      - name: regionDescription
        tests:
          - not_null

# ------------------------------------------------
# Product table
# ------------------------------------------------
  - name: raw_product
    columns:
      # productID - Unique, Not Null
      - name: productID
        tests:
          - unique
          - not_null
      # supplierID - Not Null, references raw_supplier
      - name: supplierID
        tests: 
          - not_null
          - relationships:
              to: ref('raw_supplier')
              field: supplierID
      # categoryID - Not Null, references raw_category
      - name: categoryID
        tests:
          - not_null
          - relationships:
              to: ref('raw_category')
              field: categoryID
      # quantityPerUnit - Not Null
      - name: quantityPerUnit
        tests:
          - not_null
      # unitPrice - Not Null
      - name: unitPrice
        tests:
          - not_null
      # discontinued - True or False
      - name: discontinued
        tests:
          - not_null
          - accepted_values:
              values: ['true', 'false']

# ------------------------------------------------
# Category table
# ------------------------------------------------
  - name: raw_category
    columns:
      # categoryID - Not Null, Unique
      - name: categoryID
        tests:
          - unique
          - not_null
      # categoryName - Not Null
      - name: categoryName
        tests:
          - not_null


